route grid spawn route_grid_spawn



========== route_grid_spawn =========
do print("treat")
# AI for the player is the docking logic
if has_role(SPAWNED_ID, "damcons"):
    jump damcon_ai
end_if

#### ELSE don't run a task
->END



========== damcon_ai  ================= 



this_blob = get_engine_data_set(sim, SPAWNED_ID)
if this_blob:
    length = this_blob.get("path_length", 0)
    if length is None or length < 1:
        # check for garbage and mop up
        obj = to_object(SPAWNED_ID)
        x = this_blob.get("curx", 0)
        y = this_blob.get("cury", 0)
        if obj:
            hm = sim.get_hull_map(obj.host_id)
            if hm is not None:
                at_point = hm.get_objects_at_point(x,y)
                for id in at_point:
                    if has_role(id, "damage"):
                        go = to_object(id)
                        #->Return if go is None
                        eo = go.get_engine_object(sim)
                        do hm.delete_grid_object(eo)
                        do go.destroyed()
                    
                        system_heal = random.randint(0,3)
                        ship_blob = get_engine_data_set(sim, go.host_id)
                    
                        current = ship_blob.get('system_damage', system_heal)
                        if current >0:
                            do ship_blob.set('system_damage', current-0.1 , system_heal)
                        else:
                            do ship_blob.set('system_damage', 0 ,  system_heal)
                        end_if
                    end_if
                next id
            end_if
        end_if
    
        # Then look for more work
        the_target = grid_closest(SPAWNED_ID, sim, role("damage"))
        if the_target is not None:
            do grid_target(SPAWNED_ID, sim, the_target)
        end_if

    end_if
end_if


delay sim 5s
-> damcon_ai


