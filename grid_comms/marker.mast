//enable/grid/comms if has_roles(COMMS_ORIGIN_ID, "__player__") and has_role(COMMS_SELECTED_ID, "marker")

//comms/grid if has_roles(COMMS_ORIGIN_ID, "__player__") and has_role(COMMS_SELECTED_ID, "marker") and is_grid_object_id(COMMS_SELECTED_ID)
    + "set rally point" //comms/grid/marker/rally


//comms/grid/marker/rally
    + "Back" //comms

    ###, color=f"{get_inventory_value(d.id, 'color')}", data=
    dcs = to_object_list(grid_objects(COMMS_ORIGIN_ID) & role("damcons"))
    for d in dcs:
        + "set {d.name} rally point"  comms_marker_rally_dc {"d": d}


===== comms_marker_rally_dc =======

    # Add this to the 
    _blob = to_blob(COMMS_SELECTED_ID)
    _loc_x = _blob.get("curx", 0)
    _loc_y = _blob.get("cury", 0)
    set_inventory_value(d.id, "idle_pos", (_loc_x, _loc_y) )
    #set_inventory_value(d.id, "blackboard:idle_pos", (_loc_x, _loc_y) )
    idle_marker = get_inventory_value(d.id, "idle_marker", None)
    #
    #
    clear_timer(d.id, "boost_timer")

    if idle_marker is not None:
        _blob = to_blob(idle_marker)
        _blob.set("curx",_loc_x, 0)
        _blob.set("cury",_loc_y, 0)

    #is_idle = get_inventory_value(d.id, "idle")
    #if is_idle:
    set_inventory_value(d.id, "idle_state", "start" )

    comms_navigate("//comms")
    yield success
