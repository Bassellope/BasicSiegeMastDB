#
# Hook when a ship spawns
#
//spawn if has_role(SPAWNED_ID, "__player__")

# Do later so the grid objects are sure to be there
await delay_sim(seconds=2)

# for future
task_schedule(crew_manage_health)

grid_count = len(role("quarters") & grid_objects(SPAWNED_ID)) # general idea of ship size
crew_size = grid_count * 10
set_inventory_value(SPAWNED_ID, "crew_size", crew_size)
set_inventory_value(SPAWNED_ID, "max_crew_size", crew_size)

#
# This is duplicated in player_internal, but should resolve to one
#
#//comms if ((COMMS_SELECTED_ID == COMMS_ORIGIN_ID) and has_roles(COMMS_ORIGIN_ID, 'tsn,__PLAYER__'))
#+"Sickbay" //comms/internal/sickbay


#
# The back is duplicated in player_internal, but should resolve to one
# Having it here shows it doesn't assume player_internal is here
#
//comms/internal/sickbay if ((COMMS_SELECTED_ID == COMMS_ORIGIN_ID)and has_roles(COMMS_ORIGIN_ID, 'tsn,__PLAYER__'))
+"Back" //comms
+"Crew status":
    crew_size = COMMS_ORIGIN["crew_size"] #| 0
    if crew_size == None:
        crew_size = 0
    dead = COMMS_ORIGIN["casulaty_count"] # | 0
    if dead == None:
        dead = 0
    <<[$sickbay] "sickbay crew health"
        " Currently we have {crew_size} healthy crew members and {dead} casualties



//damage/internal
jump crew_internal_damage

//damage/heat 
jump crew_internal_damage

======== crew_internal_damage   ====

crew_size = get_inventory_value(DAMAGE_ORIGIN_ID, "crew_size", 0)
dead = get_inventory_value(DAMAGE_ORIGIN_ID, "casulaty_count", 0)
total_dead = get_inventory_value(DAMAGE_ORIGIN_ID, "accumalted_casulaty_count", 0)
if crew_size > 0:
    set_inventory_value(DAMAGE_ORIGIN_ID, "crew_size", crew_size-1)
    set_inventory_value(DAMAGE_ORIGIN_ID, "casulaty_count", dead + 1)
    set_inventory_value(DAMAGE_ORIGIN_ID, "accumalted_casulaty_count", total_dead+1)
->END


======= crew_manage_health ========

await delay_sim(minutes=2)

crew_size = get_inventory_value(SPAWNED_ID, "crew_size", 0)
dead = get_inventory_value(SPAWNED_ID, "casulaty_count", 0)
total_dead = get_inventory_value(SPAWNED_ID, "accumalted_casulaty_count", 0)


jump crew_manage_health if dead <  1
if random.randint(0,25) == 12:
    set_inventory_value(SPAWNED_ID, "crew_size", crew_size+1)
    set_inventory_value(SPAWNED_ID, "casulaty_count", dead - 1)
    set_inventory_value(SPAWNED_ID, "accumalted_casulaty_count", total_dead-1)

jump crew_manage_health


#
# A signal is an event generated by script not the engine
# The engine does NOT tell us when we're docked
# but common_docking.py does emit a signal
#
//shared/signal/docked if has_roles(ORIGIN_ID, "__player__")
crew_size = get_inventory_value(ORIGIN_ID, "crew_size", 0)
dead = get_inventory_value(ORIGIN_ID, "casulaty_count", 0)

set_inventory_value(ORIGIN_ID, "crew_size", crew_size+dead)
set_inventory_value(ORIGIN_ID, "casulaty_count", 0)

->END

