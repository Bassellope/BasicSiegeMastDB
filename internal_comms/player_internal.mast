//enable/comms if has_roles(COMMS_SELECTED_ID, '__PLAYER__')


//comms if ((COMMS_SELECTED_ID == COMMS_ORIGIN_ID) and has_roles(COMMS_ORIGIN_ID, 'tsn,__PLAYER__'))
+"Sickbay" //comms/internal/sickbay
+"Security" //comms/internal/security
+"Exobiology" //comms/internal/exobiology
+"Counselor" //comms/internal/counselor 
    

//comms/internal/sickbay if ((COMMS_SELECTED_ID == COMMS_ORIGIN_ID)and has_roles(COMMS_ORIGIN_ID, 'tsn,__PLAYER__'))
+"Back" //comms

+"Status":
    <<[blue,white] "Sickbay status"
        % No serious injuries currently 
        % Sickbay is ready when needed
        % 

//comms/internal/security if ((COMMS_SELECTED_ID == COMMS_ORIGIN_ID)and has_roles(COMMS_ORIGIN_ID, 'tsn,__PLAYER__'))
+"Back" //comms
+"Status":
    <<[red,white] "Security update"
        % All secure
        % All quiet on the port bow
        % Times like this boring is good

//comms/internal/exobiology if ((COMMS_SELECTED_ID == COMMS_ORIGIN_ID)and has_roles(COMMS_ORIGIN_ID, 'tsn,__PLAYER__'))
+"Back" //comms

+"Exobiology":
    <<[green] "exobiology Potential biohazard"
        "Testing running, one moment

    # It is best to schedule delayed responses so the comms buttons are not stalled
    task_schedule(test_finished)

//comms/internal/counselor if ((COMMS_SELECTED_ID == COMMS_ORIGIN_ID)and has_roles(COMMS_ORIGIN_ID, 'tsn,__PLAYER__'))
+"Back" //comms

+ "Status":
    <<[purple, white] "counselor crew update"
        "Something is disturbing the crew
    #
    # but you can delay comms, There will be no buttons during this delay
    #
    await delay_sim(seconds=3)
    <<[purple, white] "counselor crew update"
        "Things feel like they are getting worse
    




====== test_finished ======
# This is a new task to delay the response of the test results
# COMMS variables should migrate to this task

await delay_sim(seconds=2)
<<[green,white]  "exobiology biohazard test results"
    "test results finished. Tell the captain we do not have a pathogen.

->END



