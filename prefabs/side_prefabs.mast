# Spawning default sides
prefab_spawn(prefab_side_generic, {"name":"TSN", "key":"tsn", "desc":"Terran Stellar Navy", "allies":"usfp"})
prefab_spawn(prefab_side_generic, {"name": "USFP", "key":"usfp", "desc":"USFP", "allies":"tsn", "enemies":"kralien, arvonian, torgoth, skaraan"})
prefab_spawn(prefab_side_generic, {"name": "Kralien", "key":"kralien", "desc":"Kralien Emprie", "allies":"arvonian, torgoth, skaraan", "enemies":"tsn,usfp", "races":"kralien"})
prefab_spawn(prefab_side_generic, {"name": "Arvonian", "key":"arvonian", "desc":"Arvoinian", "allies":"kralien, torgoth, skaraan", "enemies":"tsn,usfp", "races":"arvonian"})
prefab_spawn(prefab_side_generic, {"name": "Torgoth", "key":"torgoth", "desc":"Torgoth", "allies":"kralien, arvonian, skaraan", "enemies":"tsn,usfp", "races":"torgoth"})
prefab_spawn(prefab_side_generic, {"name": "Skaraan", "key":"skaraan", "desc":"Skaraan", "allies":"arvonian, torgoth, kralien", "enemies":"tsn,usfp", "races":"skaraan"})
prefab_spawn(prefab_side_generic, {"name": "Ximni", "key":"ximni", "desc":"Ximni", "allies":"", "enemies":"", "races":"ximni"})
prefab_spawn(prefab_side_generic, {"name":"Pirate", "key":"pirate", "enemies":"tsn,usfp,kralien,arvonian,torgoth,ximni"}) #Excluding Skaraan as enemy because they might cooperate sometimes.
# Debugging
# l = len(role("side"))
# await delay_sim(2)
# task_schedule("test")
# jump END

# === test
#     print("=========================------------------------------TEST================================------------------------------")
#     allies = side_are_allies("tsn","kralien")
#     enemies = side_are_enemies("kralien", "tsn")
#     print(f"Sides are allies {allies}")
#     print(f"side are enemies {enemies}")
#     side_set_relations("tsn","kralien", 0)
#     enemies = side_are_enemies("tsn", "kralien")
#     allies = side_are_allies("kralien","tsn")
#     neutral = side_are_neutral("kralien","tsn")
#     print(f"Sides are allies {allies}")
#     print(f"side are enemies {enemies}")
#     print(f"side are neutral: {neutral}")
#     ->END

=== prefab_side_generic
" Generic definition of a Side or Faction. If a side has enemies or allies, the side will be added to the enemy/ally list for 
" the applicable sides. Defaults are the TSN values.
metadata: ```
type: prefab/side
name: TSN
key: tsn
desc:
allies:
enemies:
races: terran
```
    if key is None:
        # key is the only critical property
        yield fail
    _sides = role("__side__") & role(key)
    if len(_sides) > 0:
        # The side with the given key already exists
        yield fail
    if name is None:
        name = key
    if desc is None:
        desc = name
    id = prefab.get_id()
    add_role(id, key)
    add_role(id, "__side__")
    # Convert to Sets
    if allies is None:
        ally_list = set()
    else:
        ally_list = set(allies.split(","))
    if enemies is None:
        enemy_list = set()
    else:
        enemy_list = set(enemies.split(","))
    if races is None:
        races_list = set()
    else:
        races_list = set(races.split(","))
    # Remove whitespaces from beginning and end of each item
    ally_list = ~~{item.strip() for item in ally_list}~~
    enemy_list = ~~{item.strip() for item in enemy_list}~~
    races_list = ~~{item.strip() for item in races_list}~~
    set_inventory_value(id, "side_name", name)
    set_inventory_value(id, "side_key", key)
    set_inventory_value(id, "side_allies", ally_list)
    set_inventory_value(id, "side_enemies", enemy_list)
    set_inventory_value(id, "side_races", races_list)
    set_inventory_value(id, "side_desc", desc)

    # Now we need to update the other factions
    for item in ally_list:
        side_set_relations(key, item, 1)
    for item in enemy_list:
        side_set_relations(key, item, -1)

    yield result id
