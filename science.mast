route_science_select("handle_science")

====== handle_science =====

jump station_science if has_roles(SCIENCE_SELECTED_ID, "tsn, Station")
jump friendly_science if has_roles(SCIENCE_SELECTED_ID, "tsn, friendly")
jump raider_science if has_role(SCIENCE_SELECTED_ID, "raider")
jump upgrade_science if has_role(SCIENCE_SELECTED_ID, "upgrade")
jump wreck_science if has_role(SCIENCE_SELECTED_ID, "wreck")
jump typhon_science if has_role(SCIENCE_SELECTED_ID, "typhon")

# VVVVV Default scan VVVVV

# These are fast scan of known things or things unknown to the script
if has_roles(SCIENCE_SELECTED_ID, "tsn,fighter"):
    briefing = get_inventory_value(SCIENCE_SELECTED_ID, "briefing", "Mission unknown")
    science_set_scan_data(SCIENCE_ORIGIN_ID, SCIENCE_SELECTED_ID, {"scan": "A Friendly Fighter", "intl": briefing})
elif has_roles(SCIENCE_SELECTED_ID, "tsn,shuttle"):
    briefing = get_inventory_value(SCIENCE_SELECTED_ID, "briefing", "Mission unknown")
    science_set_scan_data(SCIENCE_ORIGIN_ID, SCIENCE_SELECTED_ID, {"scan": "A Friendly shuttle", "intl": briefing})
elif has_role(SCIENCE_SELECTED_ID, "asteroid"):
    science_set_scan_data(SCIENCE_ORIGIN_ID, SCIENCE_SELECTED_ID, {"scan": "Asteroid", "intl": "The object is a boring asteroid"})
elif has_role(SCIENCE_SELECTED_ID, "nebula"):
    science_set_scan_data(SCIENCE_ORIGIN_ID, SCIENCE_SELECTED_ID, {"scan": "Nebula.", "intl": "Pretty clouds"})
else:
    science_set_scan_data(SCIENCE_ORIGIN_ID, SCIENCE_SELECTED_ID, "unknown object type.")

->END


========= station_science =======

await scan():
    + "scan":
        scan_results("This is a friendly station.")
    + "bio":
        scan_results("The crew is mostly human, plus a few aliens, pets, and lab animals.")
    + "intl":
        scan_results("Built ten years ago, this station was in excellent condition before the battle.")

->END

========= friendly_science =======

await scan():
    + "scan":
        scan_results("This is a friendly ship.")
    + "bio":
        scan_results("The crew is mostly human.")
    + "intl":
        scan_results("The ship is ready for battle.")

->END

====== raider_science  ===========
taunt_trait=get_inventory_value(SCIENCE_SELECTED_ID, "taunt_trait")
intel_list = get_inventory_value(SCIENCE_SELECTED_ID, "taunt_data")

taunt_intel = "The captain cannot be taunted."
bio_intel = "The bio scan has failed."

if taunt_trait is not None and taunt_data is not None:
    race = get_race(SCIENCE_SELECTED_ID)
    if race is not None:
        taunt_intel = intel_list[taunt_trait]['science']
        bio_intel = "A bunch of {race} creatures."

await scan():
    + "scan":
        scan_results("Enemy vessel. Exercise caution.")
    + "bio":
        scan_results("{bio_intel}")
    + "intl":
        scan_results("{taunt_intel}")

->END


===== upgrade_science ======

if has_roles(SCIENCE_SELECTED_ID, "upgrade, carapaction_coil"):
    upg_desc = "Carapaction Coil. 5 min 300% shield recharge boost."
elif has_roles(SCIENCE_SELECTED_ID, "upgrade, infusion_pcoils"):
    upg_desc = "Infusion P-Coils. 5 Minute 300% Impulse and Maneuver Speed Boost."
elif has_roles(SCIENCE_SELECTED_ID, "upgrade, tauron_focuser"):
    upg_desc = "Tauron Focuser. 5 Minute 100% Beam and Reload Speed Boost."
elif has_roles(SCIENCE_SELECTED_ID, "upgrade, secret_codecase"):
    upg_desc = "Secret Codecase. Force one enemy ship to auto-surrender"
elif has_roles(SCIENCE_SELECTED_ID, "upgrade, hidens_powercell"):
    upg_desc = "HiDens Powercell. Increase energy by 500-600."
elif has_roles(SCIENCE_SELECTED_ID, "upgrade, vigoranium_nodule"):
    upg_desc = "Vigoranium Nodule. Restore Damage Control Teams."
elif has_roles(SCIENCE_SELECTED_ID, "upgrade, cetrocite_crystal"):
    upg_desc = "Cetrocite Crystal. 5 Minute 100% Faster Heat Reduction."
elif has_roles(SCIENCE_SELECTED_ID, "upgrade, lateral_array"):
    upg_desc = "Lateral Array. 5 Minute Target Scan Triple Speed."
elif has_roles(SCIENCE_SELECTED_ID, "upgrade, haplix_overcharger"):
    upg_desc = "Haplix Overcharger. +300 to shields but may damage shield generators."



await scan():
    + "scan":
        scan_results("{upg_desc}")
->END

===== wreck_science =====
wr_desc = "Gutted and battle-scarred wreckage, the mangled remains of a fierce battle."
bio_intel = "No signs of life detected."
mat_intel = "Material scan: no salvage value. Scrap metal and traces of heavier elements, but nothing worth salvaging."

await scan():
    + "scan":
        scan_results("{wr_desc}")
    + "bio":
        scan_results("{bio_intel}")
    + "mat":
        scan_results("{mat_intel}")

->END

===== typhon_science =====
scan_desc = "A classic typhon."
_bio = "Seems to be very much alive."
_intel = "Just avoid it and it won't bother you."

await scan():
    + "scan":
        scan_results("{scan_desc}")
    + "bio":
        scan_results("{_bio}")
    + "intl":
        scan_results("{_intel}")

->END