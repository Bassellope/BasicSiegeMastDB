## 
# Example shows reusable common client select
import common_console_select.mast
import common_docking.mast
import science.mast
import comms.mast
import internal_damage.mast
import basic_ai.mast
import grid_ai.mast
import siege.mast

#logger

enemy_count=5
shared start_text = "Mission: Basic Siege written in Mast"
shared game_started = False

shared player_count = 1
shared player_list = ~~[
    MastDataObject({"name": "Artemis", "id": None, "side": "tsn", "ship": "tsn_battle_cruiser", "spawn_point": (200,0,0) , "face": random_terran()}),
    MastDataObject({"name": "Intrepid", "id": None, "side": "tsn", "ship": "tsn_battle_cruiser", "spawn_point": (300,0, -100), "face": random_terran()}),
    MastDataObject({"name": "Aegis", "id": None, "side": "tsn", "ship": "tsn_battle_cruiser" , "spawn_point": (500,0, -200), "face": random_terran()}),
    MastDataObject({"name": "Horatio", "id": None, "side": "tsn", "ship": "tsn_battle_cruiser" , "spawn_point": (700,0, -300), "face": random_terran()}),
    MastDataObject({"name": "Excalibur", "id": None, "side": "tsn", "ship": "tsn_battle_cruiser", "spawn_point": (-200,0,0) , "face": random_terran()}),
    MastDataObject({"name": "Hera", "id": None, "side": "tsn", "ship": "tsn_battle_cruiser", "spawn_point":  (-300,0,-100), "face": random_terran()}),
    MastDataObject({"name": "Ceres", "id": None, "side": "tsn", "ship": "tsn_battle_cruiser", "spawn_point": (-500,0, -200) , "face": random_terran()}),
    MastDataObject({"name": "Diana", "id": None , "side": "tsn", "ship": "tsn_battle_cruiser", "spawn_point": (-700,0, -300), "face": random_terran()}),
]~~


route destroy update_score

if IS_SERVER:

->start_server 
else: 
# client_main is in console_select

-> client_main
end_if


====== update_score  ========
obj = to_object(DESTROYED_ID)
if obj is not None:
    side = "{obj.side.lower()}_destroyed"
    count = game_stats.get(side, 0)
    do game_stats[side] = count + 1

    race = obj.art_id
    under = race.find("_")
    if under>=0:
        race = race[0:under]
        race = "{race.lower()}_ships_destroyed"
        count = game_stats.get(race, 0)
        do game_stats[race] = count + 1
    end_if        
end_if


->END

========== show_game_results ===============

simulation pause

section style="area: 10, 10, 99, 90;"

"""color:white;justify: center; font: gui-6;text:Game results"""
row
"""""color:cyan;justify:center;font:gui-5;text:{start_text}"""""
row
hole
hole
hole
hole
"""color:yellow; text:TSN Destroyed"""
"""color:yellow;justify: right; text:{game_stats["tsn_destroyed"]}"""
row
hole
hole
hole
hole
"""color:yellow; text:Raider Destroyed"""
"""color:yellow;justify: right; text:{game_stats["raider_destroyed"]}"""
row
hole
hole
hole
hole
"""color:yellow; text:arvonian ships destroyed"""
"""color:yellow;justify: right; text:{game_stats["arvonian_ships_destroyed"]}"""
row
hole
hole
hole
hole
"""color:yellow; text:kralien ships destroyed"""
"""color:yellow;justify: right; text:{game_stats["kralien_ships_destroyed"]}"""
row
hole
hole
hole
hole
"""color:yellow; text:skaraan ships destroyed"""
"""color:yellow;justify: right; text:{game_stats["skaraan_ships_destroyed"]}"""
row
hole
hole
hole
hole
"""color:yellow; text:torgoth ships destroyed"""
"""color:yellow;justify: right; text:{game_stats["torgoth_ships_destroyed"]}"""
row

end_time = int((sim.time_tick_counter - game_stats["start_time"]) / 30  /60)
hole
hole
hole
hole
"""color:yellow; right; text:Game Time"""
"""color:yellow;justify: right; text:{end_time} minutes"""


await choice:
+ "Play again":
end_await
# fall thought to start server



========== start_server ===============

start_text = "Mission: Basic Siege written in Mast"

world_select = "siege"


shared game_stats = ~~{
    "tsn_destroyed": 0,
    "raider_destroyed": 0,
    "kralien_ships_destroyed": 0,
    "skaraan_ships_destroyed": 0,
    "arvonian_ships_destroyed": 0,
    "torgoth_ships_destroyed": 0,
    "start_time": sim.time_tick_counter
}~~

====== show_server_menu =====

section style="area: 5, 10, 50, 90;"
"""""{start_text}"""""

section style="area: 50, 10, 95,90;row-height:75px;padding:0px,10px"
""" justify:right;text:Difficulty """


intslider enemy_count "low: 1.0;high:11.0"
row
blank
row

""" justify:right;text:Player ships """
intslider player_count "low: 1.0;high:8.0"
row
blank
row

""" justify:right;text:Mission Type"""
dropdown world_select "text: Mission type;list:siege,single front,double front,deep strike,peacetime,border war,infestation":
end_dropdown
row

"""justify:right;text:Terrain"""
dropdown terrain_select "text: Terrain;list:None, Few,Some, lots, many":
end_dropdown
row

"""justify:right;text:Friendly Ships"""
dropdown terrain_select "text: Friendly Ships;list:None, Few,Some, lots, many":
end_dropdown
row

"""justify:right;text:Anomalies"""
dropdown terrain_select "text: Anomalies;list:None, Few,Some, lots, many":
end_dropdown
row

on change enemy_count:
   jump show_server_menu
end_on



await choice:
+ "Start Mission":
    simulation create
    simulation resume
    -> start
end_await
-> start_server


===== start ======
# Build the world

##vradio world_select "Siege,Single Front,Double Front,Deep Strike,Peacetime,Border war"
match world_select.lower():
    case "siege": 
        schedule siege_build_world
    case "single front": 
        schedule siege_build_world
    case "double front": 
        schedule siege_build_world
    case "deep strike": 
        schedule siege_build_world
    case "peacetime": 
        schedule siege_build_world
    case "broder war": 
        schedule siege_build_world
end_match

#
# Consoles are waiting to be started 
#
game_started = True
reroute clients game_started_console
#
# Delay so the world is built, so we don't end game early
#
delay sim 4s

#
#vvvvvvvvvvvvvvvvvvvvvvvvvv

============ task_end_game ======= 
players = role('PlayerShip')
if len(players)==0:
    start_text = "Mission is lost!  All yer base are belong to us, dammit."
    game_started = False
    reroute clients show_game_results
    reroute server  show_game_results
end_if

raiders = role('Raider')
if len(raiders)==0:
    start_text = "Mission is won!  All the enemies have been destroyed."
    game_started = False
    reroute clients show_game_results
    reroute server  show_game_results
end_if

delay sim 4s
-> task_end_game



