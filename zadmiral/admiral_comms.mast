//enable/comms if has_roles(COMMS_ORIGIN_ID, 'admiral')


//comms if has_roles(COMMS_ORIGIN_ID, 'admiral')
+ "Spawn" //comms/admiral/spawn
+ "Selected" //comms/admiral/selected
+ "Area" //comms/admiral/area


//comms/admiral/spawn if has_roles(COMMS_ORIGIN_ID, 'admiral')
+ "Back" //comms
+ "Ship" //comms/admiral/spawn/ship
+ "Terrain" //comms/admiral/spawn/terrain



//comms/admiral/spawn/terrain if has_roles(COMMS_ORIGIN_ID, 'admiral')
+ "Back" //comms
+ "Asteroids":
    pos = Vec3(COMMS_ORIGIN.pos)
+ "Nebulas":
    pos = Vec3(COMMS_ORIGIN.pos)
+ "Black hole":
    pos = Vec3(COMMS_ORIGIN.pos)
+ "Monster":
    pos = Vec3(COMMS_ORIGIN.pos)
    typhon_classic_spawn(*pos.xyz)
+ "Minefield":
    pos = Vec3(COMMS_ORIGIN.pos)




//comms/admiral/spawn/ship if has_roles(COMMS_ORIGIN_ID, 'admiral')
+ "Back" //comms
+ "Arvonian":
    pos = Vec3(COMMS_ORIGIN.pos)
    fleet_diff = 5
    create_siege_fleet("arvonian", fleet_diff, *pos.xyz)
+ "Kralien":
    pos = Vec3(COMMS_ORIGIN.pos)
    fleet_diff = 5
    create_siege_fleet("kralien", fleet_diff, *pos.xyz)
+ "Torgoth":
    pos = Vec3(COMMS_ORIGIN.pos)
    fleet_diff = 5
    create_siege_fleet("torgoth", fleet_diff, *pos.xyz)
+ "Skaraan":
    pos = Vec3(COMMS_ORIGIN.pos)
    fleet_diff = 5
    create_siege_fleet("skaraan", fleet_diff, *pos.xyz)
+ "Ximni":
    pos = Vec3(COMMS_ORIGIN.pos)
    fleet_diff = 5
    create_siege_fleet("ximni", fleet_diff, *pos.xyz)
+ "Pirate":
    pos = Vec3(COMMS_ORIGIN.pos)
    fleet_diff = 5
    create_siege_fleet("pirate", fleet_diff, *pos.xyz)


//comms/admiral/selected if has_roles(COMMS_ORIGIN_ID, 'admiral')
+ "Back" //comms
+ "Delete":
    _other = get_science_selection(COMMS_SELECTED_ID)
    if _other:
        sbs.delete_object(_other)

//comms/admiral/area if has_roles(COMMS_ORIGIN_ID, 'admiral')
+ "Back" //comms
+ "Change size" //comms/admiral/area/size

//comms/admiral/area/size if has_roles(COMMS_ORIGIN_ID, 'admiral')
+ "Back" //comms/admiral/area
+ "Grow":
    pos = Vec3(COMMS_ORIGIN.pos)
    admiral_show_nav_area(COMMS_ORIGIN_ID, pos, 1000)
+ "Shrink":
    pos = Vec3(COMMS_ORIGIN.pos)
    admiral_show_nav_area(COMMS_ORIGIN_ID, pos, -1000)
+ "Reset":
    pos = Vec3(COMMS_ORIGIN.pos)
    set_inventory_value(COMMS_ORIGIN_ID, "ADMIRAL_SIZE", 5000)
    admiral_show_nav_area(COMMS_ORIGIN_ID, pos, 0)








#    id_set = broad_test(100,200,300, 400) & role("Asteroid")
#    for id in id_set:
#	    sbs.delete_object(id)




==== test_admiral
print("POC works")
